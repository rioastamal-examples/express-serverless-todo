service: 'serverless-demo-${env:NODE_ENV, "development"}'
frameworkVersion: '3'

custom:
  tableName: 'todo-demo-${env:NODE_ENV, "development"}'

provider:
  name: aws
  runtime: nodejs16.x
  region: ${env:AWS_DEFAULT_REGION, 'ap-southeast-1'}
  httpApi:
    cors: true
  iam:
    role:
      statements:
        - Effect: Allow
          Action:
            - dynamodb:Query
            - dynamodb:Scan
            - dynamodb:GetItem
            - dynamodb:PutItem
            - dynamodb:UpdateItem
            - dynamodb:DeleteItem
          Resource: 'arn:aws:dynamodb:${self:provider.region}:${aws:accountId}:table/${self:custom.tableName}'
functions:
  getInfo:
    handler: info/src/index.handler
    package:
      individually: true
      patterns:
        - '!*.js'
        - '!node_modules/**'
        - '!*.json'
        - '!*src/*'
        - '!*build.sh'
    events: 
      - httpApi:
          method: GET
          path: '/info'
    environment:
      APP_TABLE_NAME: ${self:custom.tableName}
      APP_REGION: ${env:AWS_DEFAULT_REGION, 'ap-southeast-1'}

  todo:
    handler: lambda.handler
    package:
      individually: true
      patterns:
        - '!src/get.js'
        - '!info/**'
    events: 
      - httpApi: '*'
    environment:
      APP_TABLE_NAME: ${self:custom.tableName}
      APP_REGION: ${env:AWS_DEFAULT_REGION, 'ap-southeast-1'}
      APP_EXPRESS_PATH: './src/index'
      
resources:
  Resources:
    TodoTable:
      Type: AWS::DynamoDB::Table
      Properties:
        AttributeDefinitions:
          - AttributeName: pk
            AttributeType: S
          - AttributeName: sk
            AttributeType: S
        KeySchema:
          - AttributeName: pk
            KeyType: HASH
          - AttributeName: sk
            KeyType: RANGE
        BillingMode: PAY_PER_REQUEST
        TableName: ${self:custom.tableName}
        TimeToLiveSpecification:
          AttributeName: ttl
          Enabled: true

    AmplifyRole:
      Type: AWS::IAM::Role
      Properties:
        AssumeRolePolicyDocument:
          Version: "2012-10-17"
          Statement:
            - Effect: Allow
              Principal:
                Service:
                  - amplify.amazonaws.com
              Action:
                - sts:AssumeRole
        Policies:
          - PolicyName: Amplify
            PolicyDocument:
              Version: "2012-10-17"
              Statement:
                - Effect: Allow
                  Action: "amplify:*"
                  Resource: "*"
    
    FrontendApp:
      Type: AWS::Amplify::App
      Properties:
        AccessToken: ${env:GITHUB_PERSONAL_TOKEN}
        Name: serverless-todo-frontend-${env:NODE_ENV, "development"}
        Repository: "https://github.com/rioastamal-examples/express-serverless-todo"
        BuildSpec: |
          version: 1
          applications:
            - frontend:
                phases:
                  build:
                    commands: 
                      - sh build.sh --build
                artifacts:
                  baseDirectory: build
                  files:
                    - '**/*'
                cache:
                  paths: []
              appRoot: web
        IAMServiceRole: !GetAtt AmplifyRole.Arn
        EnvironmentVariables:
          - Name: AMPLIFY_DIFF_DEPLOY
            Value: false
          - Name: AMPLIFY_MONOREPO_APP_ROOT
            Value: web
          - Name: APP_API_BASE_URL
            Value: !GetAtt HttpApi.ApiEndpoint
    
    FrontendAppBranch:
      Type: AWS::Amplify::Branch
      Properties:
        AppId: !GetAtt FrontendApp.AppId
        BranchName: master
        EnableAutoBuild: true
  
  Outputs:
    FrontEndUrl:
      Value: !Join
        - ''
        - - 'https://'
          - !GetAtt FrontendAppBranch.BranchName
          - '.'
          - !GetAtt FrontendApp.DefaultDomain