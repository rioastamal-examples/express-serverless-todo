service: 'express-serverless-${env:NODE_ENV, "development"}'
frameworkVersion: '3'

custom:
  tableName: 'express-todo-${env:NODE_ENV, "development"}'

provider:
  name: aws
  runtime: nodejs16.x
  region: ${env:AWS_DEFAULT_REGION, 'ap-southeast-1'}
  httpApi:
    cors: true
  iam:
    role:
      statements:
        - Effect: Allow
          Action:
            - dynamodb:Query
            - dynamodb:Scan
            - dynamodb:GetItem
            - dynamodb:PutItem
            - dynamodb:UpdateItem
            - dynamodb:DeleteItem
          Resource: 'arn:aws:dynamodb:${self:provider.region}:${aws:accountId}:table/${self:custom.tableName}'
        - Effect: Allow
          Action:
            - lightsail:GetContainerServices
            - lightsail:GetContainerServiceMetricData
            - lightsail:UpdateContainerService
          Resource: 'arn:aws:lightsail:${self:provider.region}:${aws:accountId}:*'

functions:
  todo:
    handler: lambda.handler
    events: 
      - httpApi: '*'

    environment:
      APP_TABLE_NAME: ${self:custom.tableName}
      APP_REGION: ${env:AWS_DEFAULT_REGION, 'ap-southeast-1'}

resources:
  Resources:
    BotDemoTable:
      Type: AWS::DynamoDB::Table
      Properties:
        AttributeDefinitions:
          - AttributeName: pk
            AttributeType: S
          - AttributeName: sk
            AttributeType: S
        KeySchema:
          - AttributeName: pk
            KeyType: HASH
          - AttributeName: sk
            KeyType: RANGE
        BillingMode: PAY_PER_REQUEST
        TableName: ${self:custom.tableName}
        TimeToLiveSpecification:
          AttributeName: ttl
          Enabled: true